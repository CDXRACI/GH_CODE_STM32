ARM GAS  /tmp/ccLUMZsg.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 1
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.MX_GPIO_Init,"ax",%progbits
  20              		.align	1
  21              		.syntax unified
  22              		.thumb
  23              		.thumb_func
  25              	MX_GPIO_Init:
  26              	.LFB132:
  27              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** 
  25:Core/Src/main.c **** /* USER CODE END Includes */
  26:Core/Src/main.c **** 
  27:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  28:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  29:Core/Src/main.c **** 
  30:Core/Src/main.c **** /* USER CODE END PTD */
  31:Core/Src/main.c **** 
ARM GAS  /tmp/ccLUMZsg.s 			page 2


  32:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  33:Core/Src/main.c **** /* USER CODE BEGIN PD */
  34:Core/Src/main.c **** /* USER CODE END PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  37:Core/Src/main.c **** /* USER CODE BEGIN PM */
  38:Core/Src/main.c **** 
  39:Core/Src/main.c **** /* USER CODE END PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* USER CODE BEGIN PV */
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE END PV */
  46:Core/Src/main.c **** 
  47:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  48:Core/Src/main.c **** void SystemClock_Config(void);
  49:Core/Src/main.c **** static void MX_GPIO_Init(void);
  50:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  51:Core/Src/main.c **** 
  52:Core/Src/main.c **** /* USER CODE END PFP */
  53:Core/Src/main.c **** 
  54:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  55:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** /* USER CODE END 0 */
  58:Core/Src/main.c **** 
  59:Core/Src/main.c **** /**
  60:Core/Src/main.c ****   * @brief  The application entry point.
  61:Core/Src/main.c ****   * @retval int
  62:Core/Src/main.c ****   */
  63:Core/Src/main.c **** int main(void)
  64:Core/Src/main.c **** {
  65:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  66:Core/Src/main.c **** 
  67:Core/Src/main.c ****   /* USER CODE END 1 */
  68:Core/Src/main.c **** 
  69:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  72:Core/Src/main.c ****   HAL_Init();
  73:Core/Src/main.c **** 
  74:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  75:Core/Src/main.c **** 
  76:Core/Src/main.c ****   /* USER CODE END Init */
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   /* Configure the system clock */
  79:Core/Src/main.c ****   SystemClock_Config();
  80:Core/Src/main.c **** 
  81:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  82:Core/Src/main.c **** 
  83:Core/Src/main.c ****   /* USER CODE END SysInit */
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   /* Initialize all configured peripherals */
  86:Core/Src/main.c ****   MX_GPIO_Init();
  87:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  88:Core/Src/main.c **** 
ARM GAS  /tmp/ccLUMZsg.s 			page 3


  89:Core/Src/main.c ****   /* USER CODE END 2 */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Infinite loop */
  92:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  93:Core/Src/main.c ****   while (1)
  94:Core/Src/main.c ****   {
  95:Core/Src/main.c ****     /* USER CODE END WHILE */
  96:Core/Src/main.c **** HAL_GPIO_TogglePin(GPIOA,GPIO_PIN_5);
  97:Core/Src/main.c **** HAL_Delay(500);
  98:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
  99:Core/Src/main.c ****   }
 100:Core/Src/main.c ****   /* USER CODE END 3 */
 101:Core/Src/main.c **** }
 102:Core/Src/main.c **** 
 103:Core/Src/main.c **** /**
 104:Core/Src/main.c ****   * @brief System Clock Configuration
 105:Core/Src/main.c ****   * @retval None
 106:Core/Src/main.c ****   */
 107:Core/Src/main.c **** void SystemClock_Config(void)
 108:Core/Src/main.c **** {
 109:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 110:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 113:Core/Src/main.c ****   */
 114:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 115:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 118:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 119:Core/Src/main.c ****   */
 120:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 121:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 127:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 128:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 129:Core/Src/main.c ****   {
 130:Core/Src/main.c ****     Error_Handler();
 131:Core/Src/main.c ****   }
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 134:Core/Src/main.c ****   */
 135:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 136:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 137:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 138:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 140:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 143:Core/Src/main.c ****   {
 144:Core/Src/main.c ****     Error_Handler();
 145:Core/Src/main.c ****   }
ARM GAS  /tmp/ccLUMZsg.s 			page 4


 146:Core/Src/main.c **** }
 147:Core/Src/main.c **** 
 148:Core/Src/main.c **** /**
 149:Core/Src/main.c ****   * @brief GPIO Initialization Function
 150:Core/Src/main.c ****   * @param None
 151:Core/Src/main.c ****   * @retval None
 152:Core/Src/main.c ****   */
 153:Core/Src/main.c **** static void MX_GPIO_Init(void)
 154:Core/Src/main.c **** {
  28              		.loc 1 154 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 32
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32 0000 30B5     		push	{r4, r5, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 12
  35              		.cfi_offset 4, -12
  36              		.cfi_offset 5, -8
  37              		.cfi_offset 14, -4
  38 0002 89B0     		sub	sp, sp, #36
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 48
 155:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  41              		.loc 1 155 3 view .LVU1
  42              		.loc 1 155 20 is_stmt 0 view .LVU2
  43 0004 0024     		movs	r4, #0
  44 0006 0394     		str	r4, [sp, #12]
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 156:Core/Src/main.c **** 
 157:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 158:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
  49              		.loc 1 158 3 is_stmt 1 view .LVU3
  50              	.LBB4:
  51              		.loc 1 158 3 view .LVU4
  52 0010 0194     		str	r4, [sp, #4]
  53              		.loc 1 158 3 view .LVU5
  54 0012 134B     		ldr	r3, .L3
  55 0014 1A6B     		ldr	r2, [r3, #48]
  56 0016 42F08002 		orr	r2, r2, #128
  57 001a 1A63     		str	r2, [r3, #48]
  58              		.loc 1 158 3 view .LVU6
  59 001c 1A6B     		ldr	r2, [r3, #48]
  60 001e 02F08002 		and	r2, r2, #128
  61 0022 0192     		str	r2, [sp, #4]
  62              		.loc 1 158 3 view .LVU7
  63 0024 019A     		ldr	r2, [sp, #4]
  64              	.LBE4:
  65              		.loc 1 158 3 view .LVU8
 159:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  66              		.loc 1 159 3 view .LVU9
  67              	.LBB5:
  68              		.loc 1 159 3 view .LVU10
  69 0026 0294     		str	r4, [sp, #8]
  70              		.loc 1 159 3 view .LVU11
ARM GAS  /tmp/ccLUMZsg.s 			page 5


  71 0028 1A6B     		ldr	r2, [r3, #48]
  72 002a 42F00102 		orr	r2, r2, #1
  73 002e 1A63     		str	r2, [r3, #48]
  74              		.loc 1 159 3 view .LVU12
  75 0030 1B6B     		ldr	r3, [r3, #48]
  76 0032 03F00103 		and	r3, r3, #1
  77 0036 0293     		str	r3, [sp, #8]
  78              		.loc 1 159 3 view .LVU13
  79 0038 029B     		ldr	r3, [sp, #8]
  80              	.LBE5:
  81              		.loc 1 159 3 view .LVU14
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 162:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_RESET);
  82              		.loc 1 162 3 view .LVU15
  83 003a 0A4D     		ldr	r5, .L3+4
  84 003c 2246     		mov	r2, r4
  85 003e 2021     		movs	r1, #32
  86 0040 2846     		mov	r0, r5
  87 0042 FFF7FEFF 		bl	HAL_GPIO_WritePin
  88              	.LVL0:
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /*Configure GPIO pin : PA5 */
 165:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_5;
  89              		.loc 1 165 3 view .LVU16
  90              		.loc 1 165 23 is_stmt 0 view .LVU17
  91 0046 2023     		movs	r3, #32
  92 0048 0393     		str	r3, [sp, #12]
 166:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  93              		.loc 1 166 3 is_stmt 1 view .LVU18
  94              		.loc 1 166 24 is_stmt 0 view .LVU19
  95 004a 0123     		movs	r3, #1
  96 004c 0493     		str	r3, [sp, #16]
 167:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  97              		.loc 1 167 3 is_stmt 1 view .LVU20
  98              		.loc 1 167 24 is_stmt 0 view .LVU21
  99 004e 0594     		str	r4, [sp, #20]
 168:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 100              		.loc 1 168 3 is_stmt 1 view .LVU22
 101              		.loc 1 168 25 is_stmt 0 view .LVU23
 102 0050 0694     		str	r4, [sp, #24]
 169:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 103              		.loc 1 169 3 is_stmt 1 view .LVU24
 104 0052 03A9     		add	r1, sp, #12
 105 0054 2846     		mov	r0, r5
 106 0056 FFF7FEFF 		bl	HAL_GPIO_Init
 107              	.LVL1:
 170:Core/Src/main.c **** 
 171:Core/Src/main.c **** }
 108              		.loc 1 171 1 is_stmt 0 view .LVU25
 109 005a 09B0     		add	sp, sp, #36
 110              	.LCFI2:
 111              		.cfi_def_cfa_offset 12
 112              		@ sp needed
 113 005c 30BD     		pop	{r4, r5, pc}
 114              	.L4:
 115 005e 00BF     		.align	2
ARM GAS  /tmp/ccLUMZsg.s 			page 6


 116              	.L3:
 117 0060 00380240 		.word	1073887232
 118 0064 00000240 		.word	1073872896
 119              		.cfi_endproc
 120              	.LFE132:
 122              		.section	.text.Error_Handler,"ax",%progbits
 123              		.align	1
 124              		.global	Error_Handler
 125              		.syntax unified
 126              		.thumb
 127              		.thumb_func
 129              	Error_Handler:
 130              	.LFB133:
 172:Core/Src/main.c **** 
 173:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 174:Core/Src/main.c **** 
 175:Core/Src/main.c **** /* USER CODE END 4 */
 176:Core/Src/main.c **** 
 177:Core/Src/main.c **** /**
 178:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 179:Core/Src/main.c ****   * @retval None
 180:Core/Src/main.c ****   */
 181:Core/Src/main.c **** void Error_Handler(void)
 182:Core/Src/main.c **** {
 131              		.loc 1 182 1 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ Volatile: function does not return.
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 183:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 184:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 185:Core/Src/main.c ****   __disable_irq();
 137              		.loc 1 185 3 view .LVU27
 138              	.LBB6:
 139              	.LBI6:
 140              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
ARM GAS  /tmp/ccLUMZsg.s 			page 7


  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  /tmp/ccLUMZsg.s 			page 8


  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /tmp/ccLUMZsg.s 			page 9


 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141              		.loc 2 140 27 view .LVU28
 142              	.LBB7:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 143              		.loc 2 142 3 view .LVU29
 144              		.syntax unified
 145              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 146 0000 72B6     		cpsid i
 147              	@ 0 "" 2
 148              		.thumb
 149              		.syntax unified
 150              	.L6:
 151              	.LBE7:
 152              	.LBE6:
 186:Core/Src/main.c ****   while (1)
 153              		.loc 1 186 3 discriminator 1 view .LVU30
 187:Core/Src/main.c ****   {
 188:Core/Src/main.c ****   }
 154              		.loc 1 188 3 discriminator 1 view .LVU31
 186:Core/Src/main.c ****   while (1)
 155              		.loc 1 186 9 discriminator 1 view .LVU32
 156 0002 FEE7     		b	.L6
 157              		.cfi_endproc
 158              	.LFE133:
 160              		.section	.text.SystemClock_Config,"ax",%progbits
 161              		.align	1
 162              		.global	SystemClock_Config
 163              		.syntax unified
 164              		.thumb
 165              		.thumb_func
 167              	SystemClock_Config:
 168              	.LFB131:
 108:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 169              		.loc 1 108 1 view -0
 170              		.cfi_startproc
 171              		@ args = 0, pretend = 0, frame = 80
 172              		@ frame_needed = 0, uses_anonymous_args = 0
 173 0000 00B5     		push	{lr}
 174              	.LCFI3:
 175              		.cfi_def_cfa_offset 4
 176              		.cfi_offset 14, -4
 177 0002 95B0     		sub	sp, sp, #84
 178              	.LCFI4:
 179              		.cfi_def_cfa_offset 88
 109:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 180              		.loc 1 109 3 view .LVU34
 109:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 181              		.loc 1 109 22 is_stmt 0 view .LVU35
 182 0004 3022     		movs	r2, #48
 183 0006 0021     		movs	r1, #0
 184 0008 08A8     		add	r0, sp, #32
ARM GAS  /tmp/ccLUMZsg.s 			page 10


 185 000a FFF7FEFF 		bl	memset
 186              	.LVL2:
 110:Core/Src/main.c **** 
 187              		.loc 1 110 3 is_stmt 1 view .LVU36
 110:Core/Src/main.c **** 
 188              		.loc 1 110 22 is_stmt 0 view .LVU37
 189 000e 0023     		movs	r3, #0
 190 0010 0393     		str	r3, [sp, #12]
 191 0012 0493     		str	r3, [sp, #16]
 192 0014 0593     		str	r3, [sp, #20]
 193 0016 0693     		str	r3, [sp, #24]
 194 0018 0793     		str	r3, [sp, #28]
 114:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 195              		.loc 1 114 3 is_stmt 1 view .LVU38
 196              	.LBB8:
 114:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 197              		.loc 1 114 3 view .LVU39
 198 001a 0193     		str	r3, [sp, #4]
 114:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 199              		.loc 1 114 3 view .LVU40
 200 001c 1F4A     		ldr	r2, .L13
 201 001e 116C     		ldr	r1, [r2, #64]
 202 0020 41F08051 		orr	r1, r1, #268435456
 203 0024 1164     		str	r1, [r2, #64]
 114:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 204              		.loc 1 114 3 view .LVU41
 205 0026 126C     		ldr	r2, [r2, #64]
 206 0028 02F08052 		and	r2, r2, #268435456
 207 002c 0192     		str	r2, [sp, #4]
 114:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 208              		.loc 1 114 3 view .LVU42
 209 002e 019A     		ldr	r2, [sp, #4]
 210              	.LBE8:
 114:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 211              		.loc 1 114 3 view .LVU43
 115:Core/Src/main.c **** 
 212              		.loc 1 115 3 view .LVU44
 213              	.LBB9:
 115:Core/Src/main.c **** 
 214              		.loc 1 115 3 view .LVU45
 215 0030 0293     		str	r3, [sp, #8]
 115:Core/Src/main.c **** 
 216              		.loc 1 115 3 view .LVU46
 217 0032 1B4B     		ldr	r3, .L13+4
 218 0034 1A68     		ldr	r2, [r3]
 219 0036 42F44042 		orr	r2, r2, #49152
 220 003a 1A60     		str	r2, [r3]
 115:Core/Src/main.c **** 
 221              		.loc 1 115 3 view .LVU47
 222 003c 1B68     		ldr	r3, [r3]
 223 003e 03F44043 		and	r3, r3, #49152
 224 0042 0293     		str	r3, [sp, #8]
 115:Core/Src/main.c **** 
 225              		.loc 1 115 3 view .LVU48
 226 0044 029B     		ldr	r3, [sp, #8]
 227              	.LBE9:
 115:Core/Src/main.c **** 
ARM GAS  /tmp/ccLUMZsg.s 			page 11


 228              		.loc 1 115 3 view .LVU49
 120:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 229              		.loc 1 120 3 view .LVU50
 120:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 230              		.loc 1 120 36 is_stmt 0 view .LVU51
 231 0046 0123     		movs	r3, #1
 232 0048 0893     		str	r3, [sp, #32]
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 233              		.loc 1 121 3 is_stmt 1 view .LVU52
 121:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 234              		.loc 1 121 30 is_stmt 0 view .LVU53
 235 004a 4FF48033 		mov	r3, #65536
 236 004e 0993     		str	r3, [sp, #36]
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 237              		.loc 1 122 3 is_stmt 1 view .LVU54
 122:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 238              		.loc 1 122 34 is_stmt 0 view .LVU55
 239 0050 0223     		movs	r3, #2
 240 0052 0E93     		str	r3, [sp, #56]
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 241              		.loc 1 123 3 is_stmt 1 view .LVU56
 123:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 12;
 242              		.loc 1 123 35 is_stmt 0 view .LVU57
 243 0054 4FF48002 		mov	r2, #4194304
 244 0058 0F92     		str	r2, [sp, #60]
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 245              		.loc 1 124 3 is_stmt 1 view .LVU58
 124:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 96;
 246              		.loc 1 124 30 is_stmt 0 view .LVU59
 247 005a 0C22     		movs	r2, #12
 248 005c 1092     		str	r2, [sp, #64]
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 249              		.loc 1 125 3 is_stmt 1 view .LVU60
 125:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 250              		.loc 1 125 30 is_stmt 0 view .LVU61
 251 005e 6022     		movs	r2, #96
 252 0060 1192     		str	r2, [sp, #68]
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 253              		.loc 1 126 3 is_stmt 1 view .LVU62
 126:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 254              		.loc 1 126 30 is_stmt 0 view .LVU63
 255 0062 1293     		str	r3, [sp, #72]
 127:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 256              		.loc 1 127 3 is_stmt 1 view .LVU64
 127:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 257              		.loc 1 127 30 is_stmt 0 view .LVU65
 258 0064 0423     		movs	r3, #4
 259 0066 1393     		str	r3, [sp, #76]
 128:Core/Src/main.c ****   {
 260              		.loc 1 128 3 is_stmt 1 view .LVU66
 128:Core/Src/main.c ****   {
 261              		.loc 1 128 7 is_stmt 0 view .LVU67
 262 0068 08A8     		add	r0, sp, #32
 263 006a FFF7FEFF 		bl	HAL_RCC_OscConfig
 264              	.LVL3:
 128:Core/Src/main.c ****   {
 265              		.loc 1 128 6 view .LVU68
ARM GAS  /tmp/ccLUMZsg.s 			page 12


 266 006e 88B9     		cbnz	r0, .L11
 135:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 267              		.loc 1 135 3 is_stmt 1 view .LVU69
 135:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 268              		.loc 1 135 31 is_stmt 0 view .LVU70
 269 0070 0F23     		movs	r3, #15
 270 0072 0393     		str	r3, [sp, #12]
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 271              		.loc 1 137 3 is_stmt 1 view .LVU71
 137:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 272              		.loc 1 137 34 is_stmt 0 view .LVU72
 273 0074 0223     		movs	r3, #2
 274 0076 0493     		str	r3, [sp, #16]
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 275              		.loc 1 138 3 is_stmt 1 view .LVU73
 138:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 276              		.loc 1 138 35 is_stmt 0 view .LVU74
 277 0078 0023     		movs	r3, #0
 278 007a 0593     		str	r3, [sp, #20]
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 279              		.loc 1 139 3 is_stmt 1 view .LVU75
 139:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 280              		.loc 1 139 36 is_stmt 0 view .LVU76
 281 007c 4FF48052 		mov	r2, #4096
 282 0080 0692     		str	r2, [sp, #24]
 140:Core/Src/main.c **** 
 283              		.loc 1 140 3 is_stmt 1 view .LVU77
 140:Core/Src/main.c **** 
 284              		.loc 1 140 36 is_stmt 0 view .LVU78
 285 0082 0793     		str	r3, [sp, #28]
 142:Core/Src/main.c ****   {
 286              		.loc 1 142 3 is_stmt 1 view .LVU79
 142:Core/Src/main.c ****   {
 287              		.loc 1 142 7 is_stmt 0 view .LVU80
 288 0084 0321     		movs	r1, #3
 289 0086 03A8     		add	r0, sp, #12
 290 0088 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 291              	.LVL4:
 142:Core/Src/main.c ****   {
 292              		.loc 1 142 6 view .LVU81
 293 008c 20B9     		cbnz	r0, .L12
 146:Core/Src/main.c **** 
 294              		.loc 1 146 1 view .LVU82
 295 008e 15B0     		add	sp, sp, #84
 296              	.LCFI5:
 297              		.cfi_remember_state
 298              		.cfi_def_cfa_offset 4
 299              		@ sp needed
 300 0090 5DF804FB 		ldr	pc, [sp], #4
 301              	.L11:
 302              	.LCFI6:
 303              		.cfi_restore_state
 130:Core/Src/main.c ****   }
 304              		.loc 1 130 5 is_stmt 1 view .LVU83
 305 0094 FFF7FEFF 		bl	Error_Handler
 306              	.LVL5:
 307              	.L12:
ARM GAS  /tmp/ccLUMZsg.s 			page 13


 144:Core/Src/main.c ****   }
 308              		.loc 1 144 5 view .LVU84
 309 0098 FFF7FEFF 		bl	Error_Handler
 310              	.LVL6:
 311              	.L14:
 312              		.align	2
 313              	.L13:
 314 009c 00380240 		.word	1073887232
 315 00a0 00700040 		.word	1073770496
 316              		.cfi_endproc
 317              	.LFE131:
 319              		.section	.text.main,"ax",%progbits
 320              		.align	1
 321              		.global	main
 322              		.syntax unified
 323              		.thumb
 324              		.thumb_func
 326              	main:
 327              	.LFB130:
  64:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 328              		.loc 1 64 1 view -0
 329              		.cfi_startproc
 330              		@ Volatile: function does not return.
 331              		@ args = 0, pretend = 0, frame = 0
 332              		@ frame_needed = 0, uses_anonymous_args = 0
 333 0000 08B5     		push	{r3, lr}
 334              	.LCFI7:
 335              		.cfi_def_cfa_offset 8
 336              		.cfi_offset 3, -8
 337              		.cfi_offset 14, -4
  72:Core/Src/main.c **** 
 338              		.loc 1 72 3 view .LVU86
 339 0002 FFF7FEFF 		bl	HAL_Init
 340              	.LVL7:
  79:Core/Src/main.c **** 
 341              		.loc 1 79 3 view .LVU87
 342 0006 FFF7FEFF 		bl	SystemClock_Config
 343              	.LVL8:
  86:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 344              		.loc 1 86 3 view .LVU88
 345 000a FFF7FEFF 		bl	MX_GPIO_Init
 346              	.LVL9:
 347              	.L16:
  93:Core/Src/main.c ****   {
 348              		.loc 1 93 3 discriminator 1 view .LVU89
  96:Core/Src/main.c **** HAL_Delay(500);
 349              		.loc 1 96 1 discriminator 1 view .LVU90
 350 000e 2021     		movs	r1, #32
 351 0010 0348     		ldr	r0, .L18
 352 0012 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 353              	.LVL10:
  97:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 354              		.loc 1 97 1 discriminator 1 view .LVU91
 355 0016 4FF4FA70 		mov	r0, #500
 356 001a FFF7FEFF 		bl	HAL_Delay
 357              	.LVL11:
  93:Core/Src/main.c ****   {
ARM GAS  /tmp/ccLUMZsg.s 			page 14


 358              		.loc 1 93 9 discriminator 1 view .LVU92
 359 001e F6E7     		b	.L16
 360              	.L19:
 361              		.align	2
 362              	.L18:
 363 0020 00000240 		.word	1073872896
 364              		.cfi_endproc
 365              	.LFE130:
 367              		.text
 368              	.Letext0:
 369              		.file 3 "/home/cdp/Downloads/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/machine/_default
 370              		.file 4 "/home/cdp/Downloads/gcc-arm-none-eabi-10.3-2021.10/arm-none-eabi/include/sys/_stdint.h"
 371              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 372              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 373              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 374              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 375              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 376              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 377              		.file 11 "<built-in>"
ARM GAS  /tmp/ccLUMZsg.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
     /tmp/ccLUMZsg.s:20     .text.MX_GPIO_Init:0000000000000000 $t
     /tmp/ccLUMZsg.s:25     .text.MX_GPIO_Init:0000000000000000 MX_GPIO_Init
     /tmp/ccLUMZsg.s:117    .text.MX_GPIO_Init:0000000000000060 $d
     /tmp/ccLUMZsg.s:123    .text.Error_Handler:0000000000000000 $t
     /tmp/ccLUMZsg.s:129    .text.Error_Handler:0000000000000000 Error_Handler
     /tmp/ccLUMZsg.s:161    .text.SystemClock_Config:0000000000000000 $t
     /tmp/ccLUMZsg.s:167    .text.SystemClock_Config:0000000000000000 SystemClock_Config
     /tmp/ccLUMZsg.s:314    .text.SystemClock_Config:000000000000009c $d
     /tmp/ccLUMZsg.s:320    .text.main:0000000000000000 $t
     /tmp/ccLUMZsg.s:326    .text.main:0000000000000000 main
     /tmp/ccLUMZsg.s:363    .text.main:0000000000000020 $d

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_GPIO_TogglePin
HAL_Delay
